# src/llm_search_and_answer/models.py

from pydantic import BaseModel, Field
from typing import Literal


# Определяем допустимые номера частей, глав, подглав
PartNumber = Literal[1, 2, 3, 4]
ChapterNumber = Literal[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
SubchapterNumber = Literal["1.1.1", "1.2.1", "1.3.1", "1.3.2", "1.3.3", "1.3.4", "1.3.5", "1.3.6", "2.4.1", "2.4.2", "2.4.3", "2.4.4", "2.4.5", "2.4.6", "2.4.7", "2.4.8", "2.4.9", "2.4.10", "2.4.11", "2.4.12", "2.4.13", "2.4.14", "2.4.15", "2.4.16", "2.4.17", "2.4.18", "2.4.19", "2.4.20", "2.4.21", "2.4.22", "2.4.23", "2.4.24", "2.4.25", "2.5.1", "3.6.1", "3.6.2", "3.6.3", "3.6.4", "3.6.5", "3.6.6", "3.6.7", "3.7.1", "3.7.2", "3.8.1", "3.8.2", "3.9.1", "3.9.2", "3.9.3", "3.9.4", "3.10.1", "3.10.2", "3.11.1", "3.11.2", "3.11.3", "3.12.1", "3.12.2", "4.13.1", "4.13.2", "4.13.3", "4.13.4", "4.13.5", "4.13.6", "4.13.7", "4.13.8", "4.14.1", "4.14.2", "4.14.3", "4.14.4", "4.14.5", "4.14.6"]

# ------------------------------------------------------------------------------
# Модели запроса/ответа (базовые)
# ------------------------------------------------------------------------------
class QuestionRequest(BaseModel):
    """
    Модель запроса, который отправляет пользователь со своим вопросом.
    """
    question: str = Field(
        ...,
        description="Текст вопроса, который пользователь задаёт LLM."
    )

class AnswerResponse(BaseModel):
    """
    Модель базового ответа от LLM с текстом.
    """
    answer: str = Field(
        ...,
        description="Текст ответа, сгенерированного моделью LLM."
    )

# ------------------------------------------------------------------------------
# Модель шага 1 (выбор части книги)
# ------------------------------------------------------------------------------
class BookPartReasoning(BaseModel):
    """
    Модель пошагового рассуждения для выбора релевантной части книги на основе вопроса пользователя.
    Каждое поле представляет этап анализа для принятия обоснованного решения.
    """
    initial_analysis: str = Field(
        ...,
        description="""
        Общий анализ контекста и вопроса:
        - Определение ключевых слов и концепций в вопросе пользователя
        - Выделение основных тем из предоставленных частей книги
        - Формулировка того, что именно ищет пользователь
        Пример: "В вопросе пользователь интересуется концепцией наследования в Python. 
        Анализируя предоставленные части книги, вижу что материал распределён от базовых концепций 
        до продвинутых тем ООП..."
        """
    )

    chapter_comparison: str = Field(
        ...,
        description="""
        Детальное сравнение каждой части книги с запросом:
        - Оценка соответствия каждой части запросу пользователя
        - Выделение преимуществ и недостатков каждой части
        - Объяснение, почему одни части подходят лучше других
        Пример: "Часть 1 содержит только базовые концепции и не затрагивает наследование.
        Часть 2 полностью посвящена ООП, включая подробное объяснение наследования.
        Часть 3 содержит продвинутые примеры, но для начального понимания избыточна..."
        """
    )

    final_answer: str = Field(
        ...,
        description="""
        Итоговое решение с аргументацией:
        - Чёткое указание номера выбранной части
        - Основные аргументы в пользу выбора
        - Объяснение, как выбранная часть поможет решить задачу пользователя
        Пример: "Оптимальный выбор - Часть 2, так как она содержит фундаментальное объяснение 
        наследования в Python, включает необходимые примеры и построена последовательно для 
        понимания концепции. Эта часть наилучшим образом соответствует текущему запросу 
        пользователя о понимании механизма наследования."
        """
    )

    selected_part: PartNumber = Field(
        ...,
        description="Номер выбранной части книги (строго один номер части от 1 до 4).",
        example=2
    )

# ------------------------------------------------------------------------------
# Модель шага 2 (выбор главы)
# ------------------------------------------------------------------------------
class ChapterReasoning(BaseModel):
    """
    Модель пошагового рассуждения для выбора релевантной главы внутри выбранной части книги.
    Каждое поле представляет этап анализа для принятия обоснованного решения.
    """
    preliminary_analysis: str = Field(
        ...,
        description="""
        Предварительный анализ запроса и контекста глав:
        - Выделение ключевых концепций и терминов из вопроса пользователя
        - Определение того, какие элементы нужно искать в описаниях глав
        - Формулировка критериев поиска подходящей главы
        Пример: " "preliminary_analysis": Анализируя вопрос пользователя о том, как создать свой первый веб-сайт, 
        я выделяю следующие ключевые аспекты для поиска в главах: 1) базовые концепции HTML и CSS, 
        2) структура простой веб-страницы, 3) практические шаги по созданию сайта. 
        Наиболее важным критерием является наличие пошаговых инструкций для начинающих."
        """
    )

    chapter_analysis: str = Field(
        ...,
        description="""
        Анализ потенциально подходящих глав:
        - Рассмотрение каждой главы на предмет соответствия запросу
        - Выделение наиболее релевантных глав
        - Объяснение, почему определенные главы подходят или не подходят
        Пример: " "chapter_analysis": В учебнике по программированию глава 2 'Основы HTML' содержит базовые концепции 
        и примеры разметки, глава 3 'CSS и стили' углубляется в оформление, а глава 4 'Создание 
        первого сайта' предоставляет пошаговое руководство. Главы 5 и 6 о JavaScript и серверной 
        части слишком сложны для начального этапа."
        """
    )

    final_reasoning: str = Field(
        ...,
        description="""
        Итоговое обоснование выбора конкретной главы:
        - Четкое объяснение, почему выбрана именно эта глава
        - Как содержание главы соответствует запросу пользователя
        - Какую конкретную пользу получит читатель
        Пример: " "final_reasoning": Выбираю главу 4 'Создание первого сайта', так как она идеально подходит для 
        начинающих: содержит пошаговое руководство от создания файловой структуры до публикации 
        сайта, включает базовые концепции HTML и CSS в контексте реального проекта, и предоставляет 
        готовый шаблон для практики. В отличие от глав 2 и 3, где материал подаётся более 
        теоретически, здесь все объяснения привязаны к практическому результату."
        """
    )

    selected_chapter: ChapterNumber = Field(
        ...,
        description="""Номер выбранной главы. Пример: "selected_chapter": 4""",
        example=4
    )

# ------------------------------------------------------------------------------
# Модель шага 3 (выбор подглавы)
# ------------------------------------------------------------------------------
class SubchapterReasoning(BaseModel):
    """
    Модель пошагового рассуждения для выбора релевантной подглавы внутри выбранной главы.
    Каждое поле представляет этап анализа для принятия обоснованного решения.
    """
    preliminary_analysis: str = Field(
        ...,
        description="""
        Предварительный анализ запроса и контекста подглав:
        - Расширение и детализация запроса пользователя
        - Определение конкретных концепций для поиска
        - Формулировка точных критериев соответствия
        Пример: "Анализируя вопрос пользователя о том, как эффективно использовать циклы в Python, 
        я ищу следующие элементы: 1) синтаксис различных типов циклов, 2) примеры применения, 
        3) типичные сценарии использования, 4) обработка исключительных случаев. Особенно важно 
        найти подглаву с практическими примерами и сравнением разных подходов."
        """
    )

    subchapter_analysis: str = Field(
        ...,
        description="""
        Анализ потенциально подходящих подглав:
        - Детальное рассмотрение содержания каждой подглавы
        - Оценка соответствия конкретным аспектам запроса
        - Выделение наиболее релевантных подглав с объяснением
        Пример: "Подглава 3.1 'Введение в циклы' даёт только базовые концепции. Подглава 3.2 
        'Практическое применение циклов' содержит множество примеров и сценариев использования. 
        Подглава 3.3 'Оптимизация циклов' слишком сложна для текущего запроса. Подглава 3.4 
        'Обработка ошибок' узко специализирована на исключениях."
        """
    )

    final_reasoning: str = Field(
        ...,
        description="""
        Итоговое обоснование выбора конкретной подглавы:
        - Аргументация выбора конкретной подглавы
        - Соответствие содержания подглавы запросу
        - Ожидаемая практическая польза для читателя
        Пример: "Выбираю подглаву 3.2 'Практическое применение циклов', так как она наилучшим 
        образом отвечает запросу пользователя. Она содержит разбор реальных сценариев 
        использования циклов, сравнение while и for, примеры с ListComprehension и советы по 
        выбору оптимального типа цикла для разных задач. В отличие от других подглав, здесь 
        теория сразу подкрепляется практикой."
        """
    )

    selected_subchapter: SubchapterNumber = Field(
        ...,
        description="Номер выбранной подглавы subchapter_number которая выбрана в рассуждениях выше, которая содержит информацию для ответа, выбрать строко 1 подглаву"
    )

# ------------------------------------------------------------------------------
# Модель объединённого ответа
# ------------------------------------------------------------------------------
class FullReasoningResponse(BaseModel):
    """
    Модель ответа, которая объединяет все этапы рассуждения и итоговый ответ.
    """
    part_reasoning: BookPartReasoning
    chapter_reasoning: ChapterReasoning
    subchapter_reasoning: SubchapterReasoning
    final_answer: AnswerResponse