#!/usr/bin/env python3
# test_gigachat_token.py
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ GigaChat API
"""

import requests
import uuid
from datetime import datetime

def test_gigachat_auth(auth_key):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ GigaChat API
    
    Args:
        auth_key (str): Authorization –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "Basic ")
    """
    
    print("üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω GigaChat...")
    print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∫–ª—é—á: {auth_key[:20]}...")
    
    # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "Accept": "application/json",
        "RqUID": str(uuid.uuid4()),  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∑–∞–ø—Ä–æ—Å–∞
        "Authorization": auth_key
    }
    
    # –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
    data = {
        "scope": "GIGACHAT_API_PERS"
    }
    
    try:
        print("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
        print(f"üìç URL: {url}")
        print(f"üìã Headers: {headers}")
        print(f"üì¶ Data: {data}")
        
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π SSL
        response = requests.post(
            url, 
            headers=headers, 
            data=data, 
            verify=False,  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–¥–µ
            timeout=10
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            # –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
            token_data = response.json()
            print("‚úÖ –£–°–ü–ï–•! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:")
            print(f"üé´ Access Token: {token_data.get('access_token', 'N/A')[:50]}...")
            print(f"‚è∞ Expires At: {token_data.get('expires_at', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è
            if 'expires_at' in token_data:
                expires_timestamp = int(token_data['expires_at']) / 1000
                expires_date = datetime.fromtimestamp(expires_timestamp)
                print(f"üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires_date}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç—ë–∫ –ª–∏ —É–∂–µ
                if expires_date > datetime.now():
                    print("‚úÖ –¢–æ–∫–µ–Ω –µ—â—ë –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
                else:
                    print("‚ö†Ô∏è –¢–æ–∫–µ–Ω —É–∂–µ –∏—Å—Ç—ë–∫!")
            
            return True
            
        else:
            # –û—à–∏–±–∫–∞
            print("‚ùå –û–®–ò–ë–ö–ê!")
            print(f"üí• –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status_code}")
            print(f"üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
            if response.status_code == 401:
                print("üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω!")
            elif response.status_code == 403:
                print("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞!")
            elif response.status_code == 429:
                print("‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
            
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}")
        return False
    except Exception as e:
        print(f"üíÄ –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("ü§ñ GigaChat Token Tester")
    print("=" * 60)
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –í–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é
    print("\n1. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Authorization –∫–ª—é—á:")
    print("   –ü—Ä–∏–º–µ—Ä: Basic abcdef1234567890...")
    auth_key = input("üîë –ö–ª—é—á: ").strip()
    
    if not auth_key:
        print("‚ùå –ö–ª—é—á –Ω–µ –≤–≤–µ–¥—ë–Ω!")
        return
    
    if not auth_key.startswith("Basic "):
        print("‚ö†Ô∏è –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'Basic '")
        auth_key = f"Basic {auth_key}"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    success = test_gigachat_auth(auth_key)
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! –ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ.")
    else:
        print("üòû –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á.")
    print("=" * 60)

if __name__ == "__main__":
    main()