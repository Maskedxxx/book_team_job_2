# tests/google_sheets/test_models.py

import unittest
from datetime import datetime
from src.google_sheets.models import QAPair, FormSubmission, SheetDataRequest

class TestGoogleSheetsModels(unittest.TestCase):
    def test_parse_form_data(self):
        # Список вопросов из таблицы
        questions = [
            "Введите свои инициалы и должность (ФИО)",
            "Какая привычка по статистике Клуба Руководителей самая вредная?",
            "Какие признаки указывают на то, что человек перешел грань между нормальным настроем на победу и гипертрофированным стремлением побеждать всегда и везде?",
            "Какие проблемы могут возникнуть у успешных людей из-за чрезмерного стремления к победе?",
            "Какие примеры-истории приводятся в тексте, чтобы проиллюстрировать навязчивое стремление к победе и его последствия?",
            "Успешным людям особенно трудно выслушать от другого человека нечто уже им известное и воздержаться от замечания. Выберите верные варианты: а) «мы и так это знаем» б) « я всегда могу добавить правильное» в) «это точно не то, что нужно» г) «мы знаем, как сделать еще лучше».",
            "Что автор рекомендует для наблюдения при работе с привычкой №5: а) Прекратите защищать свою позицию и проследите, сколь часто вы начинаете с «нет», «но» и «тем не менее». б) Начните себя постоянно и во всем контролировать в) Обратите пристальное внимание на те моменты, когда вы используете подобные слова во фразах, формально выражающих согласие с собеседником. г) Продолжайте наблюдать как другие реагируют на привычку, но не меняйте её сразу",
            "Что лежит в основе привычки №20? А) упрямая приверженность стереотипному самовосприятию – пустое тщеславие. Б) Уверенность что именно такое поведение работает В) Превратно понятая верность собственной натуре Г) Неосознанность в своих действиях и поступках",
            "Какие симптомы указывают на одержимость целью, по мнению автора?",
            "Если вы начинаете с «нет», «но», «тем не менее» и тому подобного, то каким бы дружелюбным ни был ваш тон, сколько бы вы ни вставляли смягчающих слов, показывая, что принимаете во внимание позицию собеседника, все равно вы фактически твердите ему: «……………….».",
            "Смысл вашей̆ речи нельзя резюмировать формулировками «У меня иное мнение», «Возможно, вас неверно информировали» или «Я с вами не согласен». Вы прямо и недвусмысленно заявляете: «……………….».",
            "Во что превращается беседа в тот момент, когда один из собеседников говорит: «нет», «но», «тем не менее»",
            "Почему мы начинаем выдавать свои пороки за добродетели?",
            "Продолжите фразу: «В большинстве случаев одержимость целью заявляет о себе тогда, когда мы «……………….»",
            "Какие вопросы рекомендует задать автор, когда вы замечаете за собой одержимость целью?",
            "Какое рабочее уравнение-практику предлагает автор для работы с привычкой №20?",
            "Отпарвка ответов"
        ]
        
        # Ответы пользователя
        answers = ["qew", "qwe", "qew", "qew", "qwe", "qwe", "qwe", "qwe", "qwe", 
                   "qwe", "qew", "qew", "qew", "qew", "qew", "qew", "отправлено"]
        
        # Создаем список QAPair
        qa_pairs = []
        for i in range(len(questions)):
            if i < len(answers):  # Проверяем, есть ли ответ для данного вопроса
                qa_pairs.append(QAPair(
                    question=questions[i],
                    user_answer=answers[i]
                ))
        
        # Создаем объект FormSubmission
        form_submission = FormSubmission(
            received_at=datetime.now(),
            processed=False,
            qa_pairs=qa_pairs,
            row_id="1"  # Предположим, что это первая строка
        )
        
        # Создаем запрос к Google Sheets
        sheet_request = SheetDataRequest(
            form_submission=form_submission,
            spreadsheet_id="your_spreadsheet_id",
            sheet_name="Form Responses"
        )
        
        # Проверяем, что объекты созданы корректно
        self.assertEqual(len(form_submission.qa_pairs), len(questions))
        self.assertEqual(form_submission.qa_pairs[0].question, questions[0])
        self.assertEqual(form_submission.qa_pairs[0].user_answer, answers[0])
        self.assertEqual(sheet_request.spreadsheet_id, "your_spreadsheet_id")
        self.assertEqual(sheet_request.sheet_name, "Form Responses")

if __name__ == "__main__":
    unittest.main()